{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import HelloWorld from '../components/HelloWorld'\nimport Navbar from \"../components/Navbar\";\nimport { validationMixin } from \"vuelidate\";\nimport { required, minLength, email } from \"vuelidate/lib/validators\";\nimport Vue from \"vue\";\nimport axios from \"axios\";\nimport VueAxios from \"vue-axios\";\nVue.use(VueAxios, axios);\nexport default {\n  name: \"Login\",\n  mixins: [validationMixin],\n  validations: {\n    email: {\n      required: required,\n      email: email\n    },\n    password: {\n      required: required,\n      minLength: minLength(2)\n    }\n  },\n  components: {\n    Navbar: Navbar\n  },\n  data: function data() {\n    return {\n      email: this.email,\n      password: this.password,\n      status: null,\n      // output1 : this.$route.params.no,\n      // output2 : this.$route.params.id,\n      showPassword: false,\n      listProfil: [],\n      email_db: '',\n      password_db: ''\n    };\n  },\n  methods: {\n    login: function login() {\n      var _this = this;\n\n      Vue.axios.post(\"http://localhost/galaxyphone/api/pelanggan/detail.php?email=\" + this.email).then(function (response) {\n        _this.listProfil = response.data;\n        _this.email_db = _this.listProfil[\"email\"];\n        _this.password_db = _this.listProfil[\"password\"];\n\n        if (_this.email_db === _this.email && _this.password_db === _this.password) {\n          return _this.$router.push({\n            path: \"/\"\n          });\n        } else {\n          location.reload();\n        }\n      });\n    },\n    cancel: function cancel() {\n      return this.$router.push({\n        path: \"/\"\n      });\n    }\n  },\n  computed: {\n    emailErrors: function emailErrors() {\n      var errors = [];\n      if (!this.$v.email.$dirty) return errors;\n      !this.$v.email.email && errors.push(\"Must be valid e-mail\");\n      !this.$v.email.required && errors.push(\"E-mail is required\");\n      return errors;\n    },\n    passwordErrors: function passwordErrors() {\n      var errors = [];\n      if (!this.$v.password.$dirty) return errors;\n      !this.$v.password.minLength && errors.push(\"Password must be at least 8 characters long\");\n      !this.$v.password.required && errors.push(\"Password is required\");\n      return errors;\n    }\n  },\n  mounted: function mounted() {// this.login()\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA;AAEA;EACAC,aADA;EAEAC,yBAFA;EAGAC;IACAC;MAAAC;MAAAD;IAAA,CADA;IAEAE;MAAAD;MAAAE;IAAA;EAFA,CAHA;EAOAC;IACAC;EADA,CAPA;EAUAC,IAVA,kBAUA;IACA;MACAN,iBADA;MAEAE,uBAFA;MAGAK,YAHA;MAIA;MACA;MACAC,mBANA;MAOAC,cAPA;MAQAC,YARA;MASAC;IATA;EAWA,CAtBA;EAuBAC;IACAC,KADA,mBACA;MAAA;;MACAjB,4FACAkB,IADA,CACA;QACA;QACA;QACA;;QACA;UACA;YAAAC;UAAA;QACA,CAFA,MAEA;UACAC;QACA;MAEA,CAXA;IAYA,CAdA;IAeAC,MAfA,oBAeA;MACA;QAAAF;MAAA;IACA;EAjBA,CAvBA;EA0CAG;IACAC,WADA,yBACA;MACA;MACA;MACA;MACA;MACA;IACA,CAPA;IAQAC,cARA,4BAQA;MACA;MACA;MACA,+BACAC,0DADA;MAEA;MACA;IACA;EAfA,CA1CA;EA2DAC,OA3DA,qBA2DA,CACA;EACA;AA7DA","names":["Vue","name","mixins","validations","email","required","password","minLength","components","Navbar","data","status","showPassword","listProfil","email_db","password_db","methods","login","then","path","location","cancel","computed","emailErrors","passwordErrors","errors","mounted"],"sourceRoot":"src/views","sources":["Login.vue"],"sourcesContent":["<template>\r\n  <v-app>\r\n    <Navbar />\r\n    <div id=\"app\">\r\n      <v-app id=\"inspire\" class=\"mx-16 mt-10\">\r\n        <v-card width=\"400\" height=\"500\" class=\"mt-8 mx-auto\">\r\n          <v-card-title class=\"pb-0 justify-center\">\r\n          <h1>Login</h1>\r\n          </v-card-title>\r\n          <v-card-text>\r\n            <v-form @submit.prevent=\"login\" class=\"px-5 mt-16\">\r\n              <v-text-field\r\n                v-model= \"email\"\r\n                :error-messages=\"emailErrors\"\r\n                label=\"Email\"\r\n                required\r\n                @input=\"$v.email.$touch()\"\r\n                @blur=\"$v.email.$touch()\"\r\n                prepend-icon=\"mdi-mail\"\r\n              />\r\n              <v-text-field\r\n                v-model=\"password\"\r\n                :type=\"showPassword ? 'text' : 'password'\"\r\n                :error-messages=\"passwordErrors\"\r\n                label=\"Password\"\r\n                required\r\n                @input=\"$v.password.$touch()\"\r\n                @blur=\"$v.password.$touch()\"\r\n                prepend-icon=\"mdi-lock\"\r\n                :append-icon=\"showPassword ? 'mdi-eye' : 'mdi-eye-off'\"\r\n                @click:append=\"showPassword = !showPassword\"\r\n              />\r\n            </v-form>\r\n          </v-card-text>\r\n          <v-divider class=\"mt-16\"></v-divider>\r\n          <v-card-actions class=\"my-1 mt-10 d-lg-flex justify-center\">\r\n            <v-btn @click=\"login()\" type=\"submit\" class=\"ml-5 success pa-4\"\r\n              >Login</v-btn\r\n            >\r\n            <v-btn @click=\"cancel\" class=\"ml-5 Info pa-4\">Cancel</v-btn>\r\n          </v-card-actions>\r\n          <v-card-bottom class=\"d-flex justify-center\">\r\n            <v-card-title style=\"font-size: 12px\"\r\n              >www.galaxyphone.id</v-card-title\r\n            >\r\n          </v-card-bottom>\r\n          <h1>{{listProfil.nama}}</h1>\r\n        </v-card>\r\n      </v-app>\r\n    </div>\r\n    <Footer />\r\n  </v-app>\r\n</template>\r\n<script>\r\n// import HelloWorld from '../components/HelloWorld'\r\nimport Navbar from \"../components/Navbar\";\r\nimport { validationMixin } from \"vuelidate\";\r\nimport { required, minLength, email } from \"vuelidate/lib/validators\";\r\nimport Vue from \"vue\";\r\nimport axios from \"axios\";\r\nimport VueAxios from \"vue-axios\";\r\nVue.use(VueAxios, axios);\r\n\r\nexport default {\r\n  name: \"Login\",\r\n  mixins: [validationMixin],\r\n  validations: {\r\n    email: { required, email },\r\n    password: { required, minLength: minLength(2) },\r\n  },\r\n  components: {\r\n    Navbar,\r\n  },\r\n  data() {\r\n    return {\r\n      email: this.email,\r\n      password:this.password,\r\n      status: null,\r\n      // output1 : this.$route.params.no,\r\n      // output2 : this.$route.params.id,\r\n      showPassword: false,\r\n      listProfil:[],\r\n      email_db:'',\r\n      password_db:'',\r\n    };\r\n  },\r\n  methods: {\r\n    login(){\r\n      Vue.axios.post(\"http://localhost/galaxyphone/api/pelanggan/detail.php?email=\"+this.email)\r\n      .then((response) => {\r\n        this.listProfil = response.data;\r\n          this.email_db = this.listProfil[\"email\"];\r\n          this.password_db = this.listProfil[\"password\"];\r\n          if(this.email_db === this.email && this.password_db === this.password){\r\n            return this.$router.push({ path: \"/\" });\r\n          }else{\r\n            location.reload();\r\n          }\r\n           \r\n      });\r\n    },\r\n    cancel() {\r\n      return this.$router.push({ path: \"/\" });\r\n    },\r\n  },\r\n  computed: {\r\n    emailErrors() {\r\n      const errors = [];\r\n      if (!this.$v.email.$dirty) return errors;\r\n      !this.$v.email.email && errors.push(\"Must be valid e-mail\");\r\n      !this.$v.email.required && errors.push(\"E-mail is required\");\r\n      return errors;\r\n    },\r\n    passwordErrors() {\r\n      const errors = [];\r\n      if (!this.$v.password.$dirty) return errors;\r\n      !this.$v.password.minLength &&\r\n        errors.push(\"Password must be at least 8 characters long\");\r\n      !this.$v.password.required && errors.push(\"Password is required\");\r\n      return errors;\r\n    },\r\n  },\r\n  mounted(){\r\n    // this.login()\r\n  }\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}