{"ast":null,"code":"import _regeneratorRuntime from \"D:/PROYEK DPW/galaxyphone/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/PROYEK DPW/galaxyphone/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import HelloWorld from '../components/HelloWorld'\nimport Navbar from \"../components/Navbar\";\nimport { validationMixin } from \"vuelidate\";\nimport { required, minLength, email } from \"vuelidate/lib/validators\";\nexport default {\n  nama: \"Registrasi\",\n  mixins: [validationMixin],\n  validations: {\n    nama: {\n      required: required,\n      minLength: minLength(4)\n    },\n    email: {\n      required: required,\n      email: email\n    },\n    no_hp: {\n      required: required,\n      minLength: minLength(4)\n    },\n    alamat: {\n      required: required,\n      minLength: minLength(4)\n    },\n    password: {\n      required: required,\n      minLength: minLength(6)\n    }\n  },\n  components: {\n    Navbar: Navbar\n  },\n  data: function data() {\n    return {\n      nama: \"\",\n      email: \"\",\n      no_hp: \"\",\n      alamat: \"\",\n      password: \"\",\n      status: null,\n      showPassword: false\n    };\n  },\n  methods: {\n    register: function register() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.$v.$touch();\n\n                _this.$store.dispatch(\"register\", {\n                  name: _this.nama,\n                  email: _this.email,\n                  no_hp: _this.no_hp,\n                  alamat: _this.alamat,\n                  password: _this.password\n                }).then(function () {\n                  _this.$router.push({\n                    name: \"Dashboard\"\n                  });\n                }).catch(function (err) {\n                  console.log(err);\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    cancel: function cancel() {\n      return this.$router.push({\n        name: \"Home\"\n      });\n    }\n  },\n  computed: {\n    namaErrors: function namaErrors() {\n      var errors = [];\n      if (!this.$v.nama.$dirty) return errors;\n      !this.$v.nama.minLength && errors.push(\"Nama must be at least 4 characters long.\");\n      !this.$v.nama.required && errors.push(\"Nama is required.\");\n      return errors;\n    },\n    no_hpErrors: function no_hpErrors() {\n      var errors = [];\n      if (!this.$v.no_hp.$dirty) return errors;\n      !this.$v.no_hp.minLength && errors.push(\"nomer handphone must be at least 4 characters long.\");\n      !this.$v.no_hp.required && errors.push(\"no handphone is required.\");\n      return errors;\n    },\n    alamatErrors: function alamatErrors() {\n      var errors = [];\n      if (!this.$v.alamat.$dirty) return errors;\n      !this.$v.alamat.minLength && errors.push(\"alamat must be at least 4 characters long.\");\n      !this.$v.alamat.required && errors.push(\"alamat is required.\");\n      return errors;\n    },\n    emailErrors: function emailErrors() {\n      var errors = [];\n      if (!this.$v.email.$dirty) return errors;\n      !this.$v.email.email && errors.push(\"Must be valid e-mail\");\n      !this.$v.email.required && errors.push(\"E-mail is required\");\n      return errors;\n    },\n    passwordErrors: function passwordErrors() {\n      var errors = [];\n      if (!this.$v.password.$dirty) return errors;\n      !this.$v.password.minLength && errors.push(\"Password must be at least 8 characters long\");\n      !this.$v.password.required && errors.push(\"Password is required\");\n      return errors;\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0FA;AACA;AACA;AACA;AAEA;EACAA,kBADA;EAEAC,yBAFA;EAGAC;IACAF;MAAAG;MAAAC;IAAA,CADA;IAEAC;MAAAF;MAAAE;IAAA,CAFA;IAGAC;MAAAH;MAAAC;IAAA,CAHA;IAIAG;MAAAJ;MAAAC;IAAA,CAJA;IAKAI;MAAAL;MAAAC;IAAA;EALA,CAHA;EAUAK;IACAC;EADA,CAVA;EAaAC,IAbA,kBAaA;IACA;MACAX,QADA;MAEAK,SAFA;MAGAC,SAHA;MAIAC,UAJA;MAKAC,YALA;MAMAI,YANA;MAOAC;IAPA;EASA,CAvBA;EAwBAC;IACAC,QADA,sBACA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBACA;;gBACA,aACAC,QADA,CACA,UADA,EACA;kBACAC,gBADA;kBAEAZ,kBAFA;kBAGAC,kBAHA;kBAIAC,oBAJA;kBAKAC;gBALA,CADA,EAQAU,IARA,CAQA;kBACA;oBAAAD;kBAAA;gBACA,CAVA,EAWAE,KAXA,CAWA;kBACAC;gBACA,CAbA;;cAFA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAgBA,CAjBA;IAkBAC,MAlBA,oBAkBA;MACA;QAAAJ;MAAA;IACA;EApBA,CAxBA;EA8CAK;IACAC,UADA,wBACA;MACA;MACA;MACA,2BACAC,uDADA;MAEA;MACA;IACA,CARA;IASAC,WATA,yBASA;MACA;MACA;MACA,4BACAD,kEADA;MAEA;MACA;IACA,CAhBA;IAiBAE,YAjBA,0BAiBA;MACA;MACA;MACA,6BACAF,yDADA;MAEA;MACA;IACA,CAxBA;IAyBAG,WAzBA,yBAyBA;MACA;MACA;MACA;MACA;MACA;IACA,CA/BA;IAgCAC,cAhCA,4BAgCA;MACA;MACA;MACA,+BACAJ,0DADA;MAEA;MACA;IACA;EAvCA;AA9CA","names":["nama","mixins","validations","required","minLength","email","no_hp","alamat","password","components","Navbar","data","status","showPassword","methods","register","dispatch","name","then","catch","console","cancel","computed","namaErrors","errors","no_hpErrors","alamatErrors","emailErrors","passwordErrors"],"sourceRoot":"src/views","sources":["Registrasi.vue"],"sourcesContent":["<template>\r\n  <v-app>\r\n    <Navbar />\r\n    <div id=\"app\">\r\n      <v-app id=\"inspire\" class=\"mx-16 mt-10\">\r\n        <v-card width=\"450\" class=\"mt-8 mx-auto\">\r\n          <v-card-title class=\"pb-0 justify-center\">\r\n            <h1>Register</h1>\r\n          </v-card-title>\r\n          <v-card-text>\r\n            <v-form @submit.prevent=\"register\" class=\"px-5\">\r\n              <v-text-field\r\n                v-model=\"nama\"\r\n                :error-messages=\"namaErrors\"\r\n                label=\"Nama\"\r\n                required\r\n                @input=\"$v.nama.$touch()\"\r\n                @blur=\"$v.nama.$touch()\"\r\n                prepend-icon=\"mdi-account-circle\"\r\n              />\r\n              <v-text-field\r\n                v-model=\"email\"\r\n                :error-messages=\"emailErrors\"\r\n                label=\"Email\"\r\n                required\r\n                @input=\"$v.email.$touch()\"\r\n                @blur=\"$v.email.$touch()\"\r\n                prepend-icon=\"mdi-mail\"\r\n              />\r\n              <v-text-field\r\n                v-model=\"no_hp\"\r\n                :error-messages=\"no_hpErrors\"\r\n                label=\"No. Telephone\"\r\n                required\r\n                @input=\"$v.no_hp.$touch()\"\r\n                @blur=\"$v.no_hp.$touch()\"\r\n                prepend-icon=\"mdi-phone\"\r\n              />\r\n              <v-textarea\r\n                v-model=\"alamat\"\r\n                :error-messages=\"alamatErrors\"\r\n                label=\"Alamat\"\r\n                required\r\n                @input=\"$v.alamat.$touch()\"\r\n                @blur=\"$v.alamat.$touch()\"\r\n                prepend-icon=\"mdi-map-marker\"\r\n              />\r\n              <v-text-field\r\n                v-model=\"password\"\r\n                :type=\"showPassword ? 'text' : 'password'\"\r\n                :error-messages=\"passwordErrors\"\r\n                label=\"Password\"\r\n                required\r\n                @input=\"$v.password.$touch()\"\r\n                @blur=\"$v.password.$touch()\"\r\n                prepend-icon=\"mdi-lock\"\r\n                :append-icon=\"showPassword ? 'mdi-eye' : 'mdi-eye-off'\"\r\n                @click:append=\"showPassword = !showPassword\"\r\n              />\r\n              <v-text-field\r\n                v-model=\"confirmPassword\"\r\n                :type=\"showPassword ? 'text' : 'password'\"\r\n                :error-messages=\"confirmPasswordErrors\"\r\n                label=\"Password\"\r\n                required\r\n                @input=\"$v.confirmPassword.$touch()\"\r\n                @blur=\"$v.confirmPassword.$touch()\"\r\n                prepend-icon=\"mdi-lock\"\r\n                :append-icon=\"showPassword ? 'mdi-eye' : 'mdi-eye-off'\"\r\n                @click:append=\"showPassword = !showPassword\"\r\n              />\r\n            </v-form>\r\n          </v-card-text>\r\n          <v-divider></v-divider>\r\n          <v-card-actions class=\"my-1 d-flex justify-center mt-10\">\r\n            <v-btn @click=\"register\" class=\"ml-5 success\">Register</v-btn>\r\n            <v-btn @click=\"cancel\" class=\"ml-5 Info\">Cancel</v-btn>\r\n          </v-card-actions>\r\n          <v-card-bottom class=\"d-flex justify-center\">\r\n            <v-card-title style=\"font-size: 12px\"\r\n              >www.galaxyphone.id</v-card-title\r\n            >\r\n          </v-card-bottom>\r\n        </v-card>\r\n      </v-app>\r\n    </div>\r\n    <Footer />\r\n  </v-app>\r\n</template>\r\n<script>\r\n// import HelloWorld from '../components/HelloWorld'\r\nimport Navbar from \"../components/Navbar\";\r\nimport { validationMixin } from \"vuelidate\";\r\nimport { required, minLength, email } from \"vuelidate/lib/validators\";\r\n\r\nexport default {\r\n  nama: \"Registrasi\",\r\n  mixins: [validationMixin],\r\n  validations: {\r\n    nama: { required, minLength: minLength(4) },\r\n    email: { required, email },\r\n    no_hp: { required, minLength: minLength(4) },\r\n    alamat: { required, minLength: minLength(4) },\r\n    password: { required, minLength: minLength(6) },\r\n  },\r\n  components: {\r\n    Navbar,\r\n  },\r\n  data() {\r\n    return {\r\n      nama: \"\",\r\n      email: \"\",\r\n      no_hp: \"\",\r\n      alamat: \"\",\r\n      password: \"\",\r\n      status: null,\r\n      showPassword: false,\r\n    };\r\n  },\r\n  methods: {\r\n    async register() {\r\n      this.$v.$touch();\r\n      this.$store\r\n        .dispatch(\"register\", {\r\n          name: this.nama,\r\n          email: this.email,\r\n          no_hp : this.no_hp,\r\n          alamat : this.alamat,\r\n          password: this.password\r\n        })\r\n        .then(() => {\r\n          this.$router.push({ name: \"Dashboard\" });\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    cancel() {\r\n      return this.$router.push({ name: \"Home\" });\r\n    }\r\n  },\r\n  computed: {\r\n    namaErrors() {\r\n      const errors = [];\r\n      if (!this.$v.nama.$dirty) return errors;\r\n      !this.$v.nama.minLength &&\r\n        errors.push(\"Nama must be at least 4 characters long.\");\r\n      !this.$v.nama.required && errors.push(\"Nama is required.\");\r\n      return errors;\r\n    },\r\n    no_hpErrors() {\r\n      const errors = [];\r\n      if (!this.$v.no_hp.$dirty) return errors;\r\n      !this.$v.no_hp.minLength &&\r\n        errors.push(\"nomer handphone must be at least 4 characters long.\");\r\n      !this.$v.no_hp.required && errors.push(\"no handphone is required.\");\r\n      return errors;\r\n    },\r\n    alamatErrors() {\r\n      const errors = [];\r\n      if (!this.$v.alamat.$dirty) return errors;\r\n      !this.$v.alamat.minLength &&\r\n        errors.push(\"alamat must be at least 4 characters long.\");\r\n      !this.$v.alamat.required && errors.push(\"alamat is required.\");\r\n      return errors;\r\n    },\r\n    emailErrors() {\r\n      const errors = [];\r\n      if (!this.$v.email.$dirty) return errors;\r\n      !this.$v.email.email && errors.push(\"Must be valid e-mail\");\r\n      !this.$v.email.required && errors.push(\"E-mail is required\");\r\n      return errors;\r\n    },\r\n    passwordErrors() {\r\n      const errors = [];\r\n      if (!this.$v.password.$dirty) return errors;\r\n      !this.$v.password.minLength &&\r\n        errors.push(\"Password must be at least 8 characters long\");\r\n      !this.$v.password.required && errors.push(\"Password is required\");\r\n      return errors;\r\n    },\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}